/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-22 04:53:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1687409442053L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/git/campingEverywhere_group4/camping/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("	font-family: Arial, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("	line-height: 1.2;\r\n");
      out.write("	font-size: 1.3em;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	font-family: sans-serif;\r\n");
      out.write("	color: #5a656e;\r\n");
      out.write("	margin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".my_header {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	padding-right: 50px;\r\n");
      out.write("	margin: 60px 0 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header_btn {\r\n");
      out.write("	display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header_btn button{\r\n");
      out.write("	margin-left: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	margin-bottom: 70px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h3 {\r\n");
      out.write("	color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	background-color: #8aa1a1;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	width: 80px;\r\n");
      out.write("	height: 35px;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button[type=\"submit\"] {\r\n");
      out.write("	background-color: #8aa1a1;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	font-size: 14pt;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("	background-color: #638181;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("	background-color: #8aa1a1;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr:nth-child(even) {\r\n");
      out.write("	background-color: #f2f2f2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr:hover {\r\n");
      out.write("	background-color: #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body[data-darkmode=on] h3 {\r\n");
      out.write("	color: #F7F7F7;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"my_header\">\r\n");
      out.write("			<h2 class=\"title\">마이 페이지</h2>\r\n");
      out.write("			<div class=\"header_btn\">\r\n");
      out.write("				<button type=\"button\" onclick=\"location.href='memberEditForm.do'\">정보\r\n");
      out.write("					수정</button>\r\n");
      out.write("				<div>\r\n");
      out.write("					<button type=\"button\" onclick=\"memberDelete()\">회원 탈퇴</button>\r\n");
      out.write("					<form action=\"memberDelete.do\" method=\"post\" id=\"frm\">\r\n");
      out.write("						<input type=\"hidden\" name=\"memberId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<!-- 단순 예시 수정 필요 -->\r\n");
      out.write("			<h3 class=\"title\">최근 주문 정보</h3>\r\n");
      out.write("			<div align=\"center\">\r\n");
      out.write("				<table border=\"1\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th width=\"200\">날짜/주문번호</th>\r\n");
      out.write("							<th width=\"200\">상품명/옵션</th>\r\n");
      out.write("							<th width=\"200\">상품금액/수량</th>\r\n");
      out.write("							<th width=\"200\">주문상태</th>\r\n");
      out.write("							<th width=\"200\">확인/리뷰</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("						<!-- 배송조회 페이지 코드 참조해서 다시 구현하기 -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>조회 내용이 없습니다.</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("							<td>&nbsp;</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function memberDelete() {\r\n");
      out.write("			let frm = document.getElementById(\"frm\");\r\n");
      out.write("			let result = confirm(\"정말 탈퇴하시겠습니까?\");\r\n");
      out.write("			if (result == true) {\r\n");
      out.write("				frm.submit();\r\n");
      out.write("			} else if (result == false) {\r\n");
      out.write("				alert(\"취소되었습니다\");\r\n");
      out.write("				location.href = \"myPage.do\";\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
